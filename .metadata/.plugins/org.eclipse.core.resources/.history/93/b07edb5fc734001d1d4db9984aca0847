package java_study.co.kr.joongbu.case01;

import java.util.Objects;

class PersonTest{
	
	//field 
	String name;
	int age;
	
	public PersonTest(String name,int age) {
		this.name = name;// this : 필드 접근자 
		this.age = age; 
	}

	@Override
	public int hashCode() {
		return Objects.hash(age, name);
	}

	@Override //엄청 잘 쓴 검사식이야 ~~ 흉내내기만 해도 도움이 돼요옹 ~~
	public boolean equals(Object obj) {
		if (this == obj)  //동일한 객체인가 ? 
			return true;
		if (obj == null) //null 인가 ?객체는 null 이 될 수 없음 
			return false;
		if (getClass() != obj.getClass()) //클래스의 타입이 같은가 ? 
			return false;
		PersonTest other = (PersonTest) obj; //타입이 같은지 위에서 써봤기 때문에 무조건 사용 가능하다 형변환 했을때 그 안의 내용들이 같은가 ?? (field가 같은가 ?) 
		return age == other.age && Objects.equals(name, other.name);
	}
	
}
public class L02Equals {
	public static void main(String[] args) {
		PersonTest 서정우 = new PersonTest("서정우", 25);
		PersonTest 서정우2 = new PersonTest("서정우", 25);
		System.out.println(서정우==서정우2);
		System.out.println(서정우.equals(서정우2)); //false 가 나오게 된다왜냐면 서정우랑 object 서정우2를 비교하기 때문이다  따라서 재정의가 필요하다 !!!!(Object 에는 age 나 name 이 없기 때문에 무조건 재정의를 해줘야쓸 수 있다)
	}

	
}
